{"version":3,"sources":["components/navmenu/navmenu.js","components/header/header.js","components/footer/footer.js","services/blueMarble.js","utils/converters.js","components/card-modal/card-modal.js","components/gallery-card/gallery-card.js","redux/actions/dateActions.js","components/date-form/date-form.js","components/error/error.js","components/loading/loading.js","components/cards-carousel/cards-carousel.js","components/gallery/gallery.js","redux/actions/imagesActions.js","services/apiKey.js","services/marsRovers.js","components/mars-modal/mars-modal.js","components/mars-card/mars-card.js","components/rover-select/rover-select.js","redux/actions/roverActions.js","components/rover-drawer/rover-drawer.js","components/mars/mars.js","redux/actions/roverImagesActions.js","components/app/app.js","redux/reducers/dateReducer.js","redux/reducers/imagesReducer.js","redux/reducers/roverImagesReducer.js","redux/reducers/roverReducer.js","redux/reducer.js","redux/store.js","index.js"],"names":["Navmenu","state","isDropdownShown","openDropdown","setState","hideDropdown","Navbar","variant","className","expand","expanded","this","Container","Brand","to","Toggle","onClick","Collapse","id","Nav","Component","Header","Footer","href","target","baseApiUrl","baseUrl","BlueMarble","date","a","fetch","res","ok","Error","json","slice","dateConverter","dateWithZeros","formatDate","split","reverse","join","CardModal","props","item","caption","image","year","month","day","Modal","size","centered","onHide","closeButton","Title","Body","alt","src","Button","GalleryCard","toggleModal","modalShow","img","Card","Img","Text","fullscreen","show","setDate","type","payload","DateForm","dateValue","handleChange","e","value","handleSubmit","preventDefault","prevProps","Form","onSubmit","InputGroup","onChange","mapDispatchToProps","connect","text","Loading","images","Carousel","map","Item","Caption","identifier","blueMarble","Gallery","isCarousel","toggleView","imagesRequested","getLastAvailableDate","then","dates","getNaturalsByDate","imagesLoaded","imagesError","message","catch","err","length","cards","Col","xs","sm","md","lg","fluid","Row","as","Check","label","error","loading","arr","apiKey","MarsRovers","roverName","MarsModal","earth_date","rover","img_src","CloseButton","name","MarsCard","camera","full_name","sol","RoverSelect","setRover","Select","RoverDrawer","launched","landed","status","lastUpdate","Offcanvas","marsRovers","Mars","drawerShow","toggleDrawer","roverImagesRequested","getRoverManifest","setRoverData","photo_manifest","max_date","getRoverPhotosByDate","photos","roverImagesLoaded","roverImagesError","placement","data","roverImages","App","path","exact","component","dateReducer","action","imagesReducer","roverImagesReducer","roverReducer","launch_date","landing_date","reducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e7c9eae.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './navmenu.scss'\r\n\r\nclass Navmenu extends Component {\r\n\r\n    state = {\r\n        isDropdownShown: false\r\n    }\r\n\r\n    openDropdown = () => {\r\n        this.setState({isDropdownShown: true})\r\n    }\r\n\r\n    hideDropdown = () => {\r\n        this.setState({isDropdownShown: false})\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <Navbar variant=\"dark\" className=\"navmenu\" expand=\"sm\" expanded={this.state.isDropdownShown}>\r\n                <Container>\r\n                    <Navbar.Brand><Link className=\"fw-bold nav-link navmenu_link\" to='/'>NASA App</Link></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={this.openDropdown} />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n                            <Link className=\"nav-link navmenu_link\" to='/earth' onClick={this.hideDropdown} >Earth</Link>\r\n                            <Link className=\"nav-link navmenu_link\" to='/mars' onClick={this.hideDropdown} >Mars</Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Navmenu;","import React from 'react';\r\nimport './header.scss';\r\nimport Navmenu from '../navmenu/navmenu';\r\n\r\nconst Header = () => {\r\n\r\n    return(\r\n        <header className=\"header\">\r\n            <Navmenu />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './footer.scss';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n\r\n    return(\r\n        <footer className=\"footer\">\r\n            <div className=\"footer_col navmenu\">\r\n                <ul className=\"footer_nav\">\r\n                    <li><Link className=\"footer nav-link navmenu_link  py-1\" to='/'>Home</Link></li>\r\n                    <li><Link className=\"footer nav-link navmenu_link py-1\" to='/earth'>Earth</Link></li>\r\n                    <li><Link className=\"footer nav-link navmenu_link py-1\" to='/mars'>Mars</Link></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"footer_col\">\r\n                <div className=\"mb-2 py-1\">Useful links:</div>\r\n                <div>\r\n                    <a href={'https://github.com/ssmirnovacode'} className=\"navmenu_link underline\" target=\"blank\">Github profile</a><br/>\r\n                    <a href={'https://www.nasa.gov'} className=\"navmenu_link underline\" target=\"blank\">NASA website</a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","export const baseApiUrl = 'https://epic.gsfc.nasa.gov/api';\r\n\r\nexport const baseUrl = 'https://epic.gsfc.nasa.gov';\r\n\r\nclass BlueMarble {\r\n\r\n   /*  async getAllNaturals() {\r\n        const res = await fetch(`${baseApiUrl}/natural`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Could not fetch data')\r\n        }\r\n        return await res.json();\r\n    } */\r\n\r\n    async getNaturalsByDate(date) {\r\n        const res = await fetch(`${baseApiUrl}/natural/date/${date}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Could not fetch data')\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    async getAvailableDates() {\r\n        const res = await fetch(`${baseApiUrl}/natural/available`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Could not fetch data')\r\n        }\r\n        await res.json();\r\n    }\r\n\r\n    async getLastAvailableDate() {\r\n        const res = await fetch(`${baseApiUrl}/natural/available`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Could not fetch data')\r\n        }\r\n        const json = await res.json();\r\n        return json.slice(-1);\r\n    }\r\n};\r\n\r\nexport default BlueMarble;","export const dateConverter = (dateWithZeros) => {\r\n    let date;\r\n    if (dateWithZeros[5] !== '0' && dateWithZeros[8] !== '0') {\r\n        date = dateWithZeros;\r\n    }\r\n    else if (dateWithZeros[5] === '0' && dateWithZeros[8] !== '0') {\r\n        date = dateWithZeros.slice(0,5) + dateWithZeros.slice(6);\r\n    }\r\n    else if (dateWithZeros[5] !== '0' && dateWithZeros[8] === '0') {\r\n        date = dateWithZeros.slice(0,8) + dateWithZeros.slice(9);\r\n    }\r\n    else if (dateWithZeros[5] === '0' && dateWithZeros[8] === '0') {\r\n        date = dateWithZeros.slice(0,5) + dateWithZeros.slice(6,8) + dateWithZeros.slice(9);\r\n    }\r\n    return date;\r\n};\r\n\r\nexport const formatDate = date => {\r\n    return date.split('-').reverse().join('/');\r\n};","import React from \"react\";\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { baseUrl } from '../../services/blueMarble'; \r\nimport './card-modal.scss';\r\nimport { formatDate } from '../../utils/converters';\r\n\r\nconst CardModal = (props) => {\r\n\r\n  const { date, caption, image } = props.item;\r\n\r\n  const year = date.slice(0,4),\r\n    month = date.slice(5,7),\r\n    day = date.slice(8,10)\r\n\r\n    return (\r\n      <Modal className=\"modal\"\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        onHide={props.onHide}\r\n      >\r\n        <Modal.Header className=\"modal_content\" closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            <h4>{`${formatDate(date.slice(0,10))} at ${date.slice(11)}`}:</h4>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"modal_content modal_content_body\">\r\n          \r\n            <img className=\"modal_image\" alt={caption} src={`${baseUrl}/archive/natural/${year}/${month}/${day}/png/${image}.png`} />\r\n          \r\n        </Modal.Body>\r\n        <Modal.Footer className=\"modal_content modal_content_footer\">\r\n          <a className=\"modal_content_link\" href={`${baseUrl}/archive/natural/${year}/${month}/${day}/png/${image}.png`} target=\"blank\">View on NASA web with zoom options</a>\r\n          <Button variant=\"outline-light\" className=\"modal_btn\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  export default CardModal;","import React, { Component } from \"react\";\r\nimport { baseUrl } from '../../services/blueMarble'; \r\nimport { Card } from \"react-bootstrap\";\r\nimport './gallery-card.scss';\r\nimport CardModal from '../card-modal/card-modal';\r\nimport { formatDate } from '../../utils/converters';\r\n\r\nclass GalleryCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalShow: false\r\n        }\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(state => ({\r\n            modalShow: !state.modalShow\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        const { img, year, month, day } = this.props;\r\n    \r\n        return(\r\n            <>\r\n            <Card className=\"card\" onClick={this.toggleModal}>\r\n                <Card.Img alt={img.caption} src={`${baseUrl}/archive/natural/${year}/${month}/${day}/jpg/${img.image}.jpg`} />\r\n                <Card.Body className=\"card_body\">\r\n                    <Card.Title>{`${formatDate(img.date.slice(0,10))} at ${img.date.slice(11)}`}:</Card.Title>\r\n                    <Card.Text>{img.caption}</Card.Text>\r\n                </Card.Body>\r\n                \r\n            </Card>\r\n            <CardModal fullscreen show={this.state.modalShow} onHide={this.toggleModal} item={img} />\r\n            </>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nexport default GalleryCard;","export const setDate = (date) => ({\r\n    type: 'SET_DATE',\r\n    payload: date\r\n});","import React, { Component } from 'react';\r\nimport './date-form.scss';\r\nimport { Form, Button, InputGroup } from 'react-bootstrap'\r\nimport { connect } from 'react-redux';\r\nimport { setDate } from '../../redux//actions/dateActions';\r\n\r\nclass DateForm extends Component  {\r\n\r\n    state = {\r\n        dateValue: this.props.date\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.date !== prevProps.date) {\r\n            this.setState({\r\n                dateValue: this.props.date \r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            dateValue: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.setDate(this.state.dateValue)\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <InputGroup className=\"mb-3\">\r\n                    <input type=\"date\" onChange={this.handleChange} value={this.state.dateValue} />\r\n                    <Button variant=\"outline-light\" type=\"submit\" id=\"button-addon1\">Set date</Button>\r\n                </InputGroup>\r\n            </Form>\r\n            \r\n            \r\n            )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    date: state.date\r\n});\r\nconst mapDispatchToProps = {\r\n    setDate\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DateForm);","\r\nimport React from 'react';\r\nimport './error.scss';\r\n\r\nconst Error = ({text=''}) => {\r\n    return(\r\n        <div className=\"error pt-5\">{text}\r\n            <img className=\"d-block error_img\" alt={text} src=\"https://c.tenor.com/6xd1kGTGV-EAAAAC/houston-we-have-a-problem-tom-hanks.gif\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport './loading.scss';\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className=\"background\">\r\n            <div className=\"planet-content\">\r\n                <div className=\"planet\">\r\n                    <div className=\"ring\"></div>\r\n                    <div className=\"cover-ring\"></div>\r\n                    <div className=\"spots\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n\r\n                    </div>\r\n                </div>\r\n                <p>loading</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { baseUrl } from '../../services/blueMarble'; \r\nimport './cards-carousel.scss';\r\n\r\nconst CardsCarousel = props => {\r\n\r\n    const { images, date } = props;\r\n\r\n    const year = date.slice(0,4),\r\n            month = date.slice(5,7),\r\n            day = date.slice(8,10);\r\n\r\n    return(\r\n        <Carousel className=\"cards-carousel mt-3\">\r\n            {\r\n                images.map(image => {\r\n                    return(\r\n                        <Carousel.Item key={image.identifier} className=\"cards-carousel_item\">\r\n                            <img\r\n                            className=\"cards-carousel_image d-block\"\r\n                            src={`${baseUrl}/archive/natural/${year}/${month}/${day}/jpg/${image.image}.jpg`}\r\n                            alt={image.caption}\r\n                            />\r\n                            <Carousel.Caption>\r\n                            <h3 className=\"cards-carousel_title\">{image.date}</h3>\r\n                            <p className=\"cards-carousel_caption\">{image.caption}</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </Carousel>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    date: state.date,\r\n    images: state.images.images\r\n});\r\n\r\nexport default connect(mapStateToProps)(CardsCarousel);","import React, { Component } from 'react';\r\nimport BlueMarble from '../../services/blueMarble'; \r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\nimport GalleryCard from '../gallery-card/gallery-card';\r\nimport './gallery.scss';\r\nimport { setDate } from '../../redux/actions/dateActions';\r\nimport { imagesLoaded, imagesError, imagesRequested } from '../../redux/actions/imagesActions';\r\nimport { connect } from 'react-redux';\r\nimport DateForm from '../date-form/date-form';\r\nimport Error from '../error/error';\r\nimport Loading from '../loading/loading';\r\nimport CardsCarousel from '../cards-carousel/cards-carousel';\r\nimport { formatDate } from '../../utils/converters';\r\n\r\nconst blueMarble = new BlueMarble();\r\n\r\nclass Gallery extends Component {\r\n\r\n    state = {\r\n        isCarousel: false\r\n    }\r\n\r\n    toggleView = () => {\r\n        this.setState(state => ({\r\n            isCarousel: !state.isCarousel\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.imagesRequested();\r\n        blueMarble.getLastAvailableDate()\r\n        .then(dates => {\r\n            this.props.setDate(dates[0]);\r\n        })\r\n        .then(() =>{\r\n            blueMarble.getNaturalsByDate(this.props.date)\r\n            .then(res => res ? this.props.imagesLoaded(res) : this.props.imagesError({ message: 'No images available for selected day'}))\r\n            .catch(err => this.props.imagesError(err))\r\n        })\r\n        .catch(err => this.props.imagesError({ message: 'NASA images API is not available at the moment. Try again later.'}))\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.date !== prevProps.date) {\r\n            this.props.imagesRequested();\r\n            blueMarble.getNaturalsByDate(this.props.date)\r\n                .then(res =>  {\r\n                    if (res.length > 0) {\r\n                        this.props.imagesLoaded(res);\r\n                    }\r\n                    else {\r\n                        this.props.imagesError({ message: 'No images available for selected day'});\r\n                    }\r\n                })\r\n                .catch(err => this.props.imagesError({ message: 'NASA images API is not available at the moment. Try again later.'}))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { date } = this.props;\r\n\r\n        const year = date.slice(0,4),\r\n            month = date.slice(5,7),\r\n            day = date.slice(8,10)\r\n\r\n        const cards = this.props.images.map(img => {\r\n            return(\r\n                <Col key={img.identifier} xs={12} sm={6} md={4} lg={3}>\r\n                    <GalleryCard img={img} year={year} month={month} day={day} />\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <Container fluid className=\"gallery_wrapper\">\r\n                <Row>\r\n                    <Col>\r\n                        <Container fluid className=\"gallery_header\">\r\n                            <Row>\r\n                                <Col as={Col} xs={12} sm={6} lg={5}>\r\n                                    <h3>Images taken on {formatDate(date)}: </h3>\r\n                                </Col>\r\n                                <Col as={Col} xs={12} sm={6}>\r\n                                    <DateForm />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Check onChange={this.toggleView}\r\n                                        type=\"switch\"\r\n                                        className=\"gallery_view-switch\"\r\n                                        label={`Switch to ${ this.state.isCarousel ? 'gallery' : 'carousel'}`}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        </Container>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                {this.props.error ? <Error text={this.props.error.message} /> : \r\n                                this.props.loading? <Loading /> :\r\n                                this.state.isCarousel ? <CardsCarousel /> : cards}\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    date: state.date,\r\n    images: state.images.images,\r\n    loading: state.images.loading,\r\n    error: state.images.error\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setDate,\r\n    imagesRequested,\r\n    imagesLoaded,\r\n    imagesError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Gallery);","export const imagesRequested = () => ({\r\n    type: 'IMAGES_REQUESTED'\r\n});\r\n\r\nexport const imagesError = (err) => ({\r\n    type: 'IMAGES_ERROR',\r\n    payload: err\r\n});\r\n\r\nexport const imagesLoaded = (arr) => ({\r\n    type: 'IMAGES_LOADED',\r\n    payload: arr\r\n});","export const apiKey = 'eMgnx9Sa9kfEXiT3yTvw7FWwJ6dJqe8cyyXqEG1g';","import { apiKey } from './apiKey';\r\nimport { dateConverter } from '../utils/converters';\r\n\r\nconst baseApiUrl = 'https://api.nasa.gov/mars-photos/api/v1';\r\n\r\nclass MarsRovers {\r\n\r\n    async getRoverPhotosByDate(roverName, date) {\r\n\r\n        const res = await fetch(`${baseApiUrl}/rovers/${roverName}/photos?earth_date=${dateConverter(date)}&api_key=${apiKey}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Could not fetch data')\r\n        }\r\n        return await res.json(); // .photos -> []\r\n    }\r\n\r\n    async getRoverManifest(roverName) {\r\n        const res = await fetch(`${baseApiUrl}/manifests/${roverName}/?api_key=${apiKey}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Could not fetch data')\r\n        }\r\n        return await res.json();\r\n    }\r\n};\r\n\r\nexport default MarsRovers;","import React from \"react\";\r\nimport { Modal, CloseButton } from 'react-bootstrap';\r\nimport './mars-modal.scss'\r\n\r\nconst MarsModal = (props) => {\r\n\r\n  const { earth_date, rover, img_src } = props.item;\r\n\r\n    return (\r\n      <Modal className=\"modal\"\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        onHide={props.onHide}\r\n      >\r\n         <CloseButton variant=\"white\" className=\"mars-modal-close\"  onClick={props.onHide}/>\r\n          <img className=\"modal_image\" alt={`Taken by ${rover.name} on ${earth_date}`} src={img_src} />\r\n        {/* <Modal.Header className=\"modal_content\" closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            <h4>{earth_date}</h4>\r\n          </Modal.Title>\r\n        </Modal.Header> */}\r\n        {/* <Modal.Body className=\"modal_content modal_content_body\">\r\n        <CloseButton variant=\"white\" className=\"mars-modal-close\" />\r\n            <img className=\"modal_image\" alt={`Taken by ${rover.name} on ${earth_date}`} src={img_src} />\r\n          \r\n        </Modal.Body> */}\r\n        {/* <Modal.Footer className=\"modal_content modal_content_footer\">\r\n          <Button variant=\"outline-light\" className=\"modal_btn\" onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer> */}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  export default MarsModal;","import React, { Component } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport './mars-card.scss';\r\nimport MarsModal from '../mars-modal/mars-modal';\r\nimport { formatDate } from '../../utils/converters';\r\n\r\nclass MarsCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalShow: false\r\n        }\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState(state => ({\r\n            modalShow: !state.modalShow\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        const { img } = this.props;\r\n    \r\n        return(\r\n            <>\r\n            <Card className=\"mars-card\" onClick={this.toggleModal} >\r\n                <Card.Img alt={`Image taken by ${img.rover.name} on ${formatDate(img.earth_date)}`} src={img.img_src}/>\r\n                <Card.Body className=\"mars-card_body\">\r\n                    <Card.Title>Date: {formatDate(img.earth_date)}</Card.Title><hr/>\r\n                    <Card.Text as=\"div\">\r\n                        <div>Rover: <strong>{img.rover.name}</strong></div>\r\n                        <div>Camera: <strong>{img.camera.full_name}</strong></div>\r\n                        <div>Martian day from mission start: <strong>{img.sol}</strong></div>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            <MarsModal show={this.state.modalShow} onHide={this.toggleModal} item={img} />\r\n            </>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nexport default MarsCard;","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { setRover } from '../../redux/actions/roverActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass RoverSelect extends Component {\r\n\r\n    handleChange = (e) => {\r\n        this.props.setRover(e.target.value);\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <Form.Select aria-label=\"Default select example\" onChange={this.handleChange}>\r\n                <option value=\"Curiosity\">Select a rover</option>\r\n                <option value=\"Spirit\">Spirit</option>\r\n                <option value=\"Opportunity\">Opportunity</option>\r\n                <option value=\"Curiosity\">Curiosity</option>\r\n            </Form.Select>\r\n        )\r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    rover: state.rover\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setRover\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoverSelect);","export const setRover = (roverName) => ({\r\n    type: 'SET_ROVER',\r\n    payload: roverName\r\n});\r\n\r\nexport const setRoverData = (data) => ({\r\n    type: 'SET_ROVER_DATA',\r\n    payload: data\r\n});","import React from 'react';\r\nimport { Offcanvas, CloseButton } from 'react-bootstrap';\r\nimport './rover-drawer.scss';\r\nimport { formatDate } from '../../utils/converters';\r\n\r\nconst RoverDrawer = props => {\r\n\r\n    const { name, launched, landed, status, lastUpdate } = props.rover;\r\n\r\n    return(\r\n        <Offcanvas className=\"rover-drawer\" show={props.show} onHide={props.onHide} {...props}>\r\n            <Offcanvas.Header>\r\n                <CloseButton variant=\"white\" className=\"mars-modal-close p-3\" onClick={props.onHide}/>\r\n            <Offcanvas.Title>{name} rover</Offcanvas.Title>\r\n            </Offcanvas.Header>\r\n            <Offcanvas.Body>\r\n            <ul>\r\n                <li>Launched: <strong>{formatDate(launched)}</strong></li>\r\n                <li>Landed on Mars: <strong>{formatDate(landed)}</strong></li>\r\n                <li>Last recorded activity: <strong>{formatDate(lastUpdate)}</strong></li>\r\n                <li>Mission status: <b><em>{status}</em></b></li>\r\n            </ul>\r\n            </Offcanvas.Body>\r\n        </Offcanvas>\r\n    )\r\n    \r\n};\r\n\r\nexport default RoverDrawer;","import React, { Component } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport './mars.scss';\r\nimport DateForm from '../date-form/date-form';\r\nimport Error from '../error/error';\r\nimport Loading from '../loading/loading';\r\nimport { setDate } from '../../redux/actions/dateActions';\r\nimport { roverImagesLoaded, roverImagesError, roverImagesRequested } from '../../redux/actions/roverImagesActions';\r\nimport { setRoverData } from '../../redux/actions/roverActions';\r\nimport { connect } from 'react-redux';\r\nimport MarsRovers from '../../services/marsRovers';\r\nimport MarsCard from '../mars-card/mars-card';\r\nimport RoverSelect from '../rover-select/rover-select';\r\nimport RoverDrawer from '../rover-drawer/rover-drawer';\r\nimport { formatDate } from '../../utils/converters';\r\n\r\nconst marsRovers = new MarsRovers();\r\n\r\nclass Mars extends Component {\r\n\r\n    state = {\r\n        drawerShow: false\r\n    }\r\n\r\n    toggleDrawer = () => {\r\n        this.setState(state => ({ drawerShow: !state.drawerShow }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.roverImagesRequested();\r\n        marsRovers.getRoverManifest(this.props.rover.name)\r\n        .then(res => {\r\n            //console.log(res.photo_manifest);\r\n            this.props.setRoverData(res.photo_manifest);\r\n            this.props.setDate(res.photo_manifest.max_date);\r\n\r\n        })\r\n        .then(() => {\r\n            //console.log(this.props.date);\r\n            marsRovers.getRoverPhotosByDate(this.props.rover.name, this.props.date)\r\n            .then(res => {\r\n                //console.log(res);\r\n                res.photos.length > 0  ? this.props.roverImagesLoaded(res.photos) : this.props.roverImagesError({ message: `${this.props.rover.name} rover didnt take any photos on ${this.props.date}`})\r\n            })\r\n            .catch(err => this.props.roverImagesError(err))\r\n        })\r\n        \r\n        .catch(err => this.props.roverImagesError(err))\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.date !== prevProps.date && this.props.rover.name === prevProps.rover.name) {\r\n            this.props.roverImagesRequested();\r\n            marsRovers.getRoverPhotosByDate(this.props.rover.name, this.props.date)\r\n            .then(res => {\r\n                //console.log('got photos');\r\n                res.photos.length > 0 ? this.props.roverImagesLoaded(res.photos) : this.props.roverImagesError({ message: `${this.props.rover.name} rover didnt take any photos on ${this.props.date}`})\r\n            })\r\n            .catch(err => this.props.roverImagesError(err))\r\n        }\r\n        if (this.props.rover.name !== prevProps.rover.name) {\r\n            this.props.roverImagesRequested();\r\n            marsRovers.getRoverManifest(this.props.rover.name)\r\n            .then(res => {\r\n                //console.log(res.photo_manifest);\r\n                this.props.setRoverData(res.photo_manifest);\r\n                this.props.setDate(res.photo_manifest.max_date);\r\n            })\r\n            .then(() => {\r\n                //console.log(this.props.date);\r\n                marsRovers.getRoverPhotosByDate(this.props.rover.name, this.props.date)\r\n                .then(res => {\r\n                    res.photos.length > 0 ? this.props.roverImagesLoaded(res.photos) : this.props.roverImagesError({ message: `${this.props.rover.name} rover didnt take any photos on ${this.props.date}`})\r\n                })\r\n                .catch(err => this.props.roverImagesError(err))\r\n            })\r\n            \r\n            .catch(err => this.props.roverImagesError(err))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { date } = this.props;\r\n\r\n        const cards = this.props.images.map(img => {\r\n            return(\r\n                <Col key={img.id} xs={12} sm={6} lg={4}>\r\n                    <MarsCard img={img} />\r\n                </Col>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <Container fluid className=\"mars-gallery mars-gallery_wrapper\">\r\n                <Row>\r\n                    <Col>\r\n                        <Container fluid className=\"gallery_header\">\r\n                            <Row>\r\n                                <Col as={Col} xs={12} sm={12} lg={4}>\r\n                                    <h3>Mars images taken on {formatDate(date)} by <span className=\"rover-link\" onClick={this.toggleDrawer} >\r\n                                            {this.props.rover.name !== 'Select a rover' ? this.props.rover.name : 'Curiosity'}\r\n                                        </span> rover: </h3>\r\n                                </Col>\r\n                                <Col as={Col} xs={12} sm={6} lg={4}>\r\n                                    <DateForm />\r\n                                </Col>\r\n                                <Col as={Col} xs={12} sm={6} lg={4}>\r\n                                    <RoverSelect />\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                        <Container fluid>\r\n                            <Row>\r\n                                {this.props.error ? <Error text={this.props.error.message} /> : \r\n                                this.props.loading? <Loading /> : cards}\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n                <RoverDrawer placement=\"top\" rover={this.props.rover} show={this.state.drawerShow} onHide={this.toggleDrawer} />\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    date: state.date,\r\n    images: state.roverImages.images,\r\n    loading: state.roverImages.loading,\r\n    error: state.roverImages.error,\r\n    rover: state.rover\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setDate,\r\n    roverImagesRequested,\r\n    roverImagesLoaded,\r\n    roverImagesError,\r\n    setRoverData\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mars);","export const roverImagesRequested = () => ({\r\n    type: 'ROVER_IMAGES_REQUESTED'\r\n});\r\n\r\nexport const roverImagesError = (err) => ({\r\n    type: 'ROVER_IMAGES_ERROR',\r\n    payload: err\r\n});\r\n\r\nexport const roverImagesLoaded = (arr) => ({\r\n    type: 'ROVER_IMAGES_LOADED',\r\n    payload: arr\r\n});","import React from 'react';\r\nimport './app.scss';\r\nimport Header from '../header/header';\r\nimport Footer from '../footer/footer';\r\nimport Gallery from '../gallery/gallery';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Mars from '../mars/mars';\r\n\r\nconst App = () => {\r\n\r\n    return(\r\n        <Router>\r\n            <div className=\"content\">\r\n                <Header />\r\n                <Route path='/' exact component={Gallery} />\r\n                <Route path='/earth' component={Gallery} />\r\n                <Route path='/mars' component={Mars} />\r\n            </div>\r\n            <Footer />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","const dateReducer = (state='', action) => {\r\n    switch(action.type) {\r\n        case 'SET_DATE': \r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dateReducer;","const imagesReducer = (state = {\r\n                                images: [],\r\n                                loading: false,\r\n                                error: null\r\n                            }, action) => {\r\n    switch (action.type) {\r\n        case 'IMAGES_REQUESTED':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false\r\n            }\r\n        case 'IMAGES_LOADED':\r\n                return {\r\n                    ...state,\r\n                    images: action.payload,\r\n                    loading: false\r\n                }\r\n        case 'IMAGES_ERROR':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }   \r\n}\r\n\r\nexport default imagesReducer;","const roverImagesReducer = (state = {\r\n                                    images: [],\r\n                                    loading: false,\r\n                                    error: null\r\n                                }, action) => {\r\n    switch (action.type) {\r\n        case 'ROVER_IMAGES_REQUESTED':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false\r\n        }\r\n        case 'ROVER_IMAGES_LOADED':\r\n            return {\r\n                ...state,\r\n                images: action.payload,\r\n                loading: false\r\n            }\r\n        case 'ROVER_IMAGES_ERROR':\r\n            return {\r\n            ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }   \r\n}\r\n\r\nexport default roverImagesReducer;","const roverReducer = (state = {\r\n    name: 'Curiosity',\r\n    launched: '2011-11-26',\r\n    landed: '2012-08-06',\r\n    lastUpdate: '2021-10-01',\r\n    status: 'active'\r\n}, action) => {\r\n    switch(action.type) {\r\n        case 'SET_ROVER':\r\n            return {\r\n                ...state,\r\n                name: action.payload\r\n            }\r\n\r\n        case 'SET_ROVER_DATA':\r\n            return {\r\n                ...state,\r\n                launched: action.payload.launch_date,\r\n                landed: action.payload.landing_date,\r\n                lastUpdate: action.payload.max_date,\r\n                status: action.payload.status\r\n                /* data: {\r\n                    launched: action.payload.launch_date,\r\n                    landed: action.payload.landing_date,\r\n                    lastUpdate: action.payload.max_date,\r\n                    status: action.payload.status\r\n                } */\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\nexport default roverReducer;","import { combineReducers } from \"redux\";\r\nimport dateReducer from \"./reducers/dateReducer\";\r\nimport imagesReducer from './reducers/imagesReducer';\r\nimport roverImagesReducer from './reducers/roverImagesReducer';\r\nimport roverReducer from \"./reducers/roverReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    date: dateReducer,\r\n    images: imagesReducer,\r\n    roverImages: roverImagesReducer,\r\n    rover: roverReducer\r\n});\r\n\r\nexport default reducer;","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/app/app';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}